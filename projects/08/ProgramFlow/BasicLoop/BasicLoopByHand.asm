    // push constant 0    
    @0
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
    // pop local 0         // initializes sum = 0
    @0
    D=A
    @LCL
    M=M+D
    @SP
    M=M-1
    A=M
    D=M
    @LCL
    A=M
    M=D
    @0
    D=A
    @LCL
    M=M-D
    // label LOOP_START
(LOOP_START)    
    // push argument 0    
    @0
    D=A
    @ARG
    A=D+M
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    // push local 0
    @0
    D=A
    @LCL
    A=D+M
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    // add
    @SP
    M=M-1
    A=M
    D=M
    @SP
    M=M-1
    A=M
    M=D+M
    @SP
    M=M+1
    // pop local 0	        // sum = sum + counter
    @0
    D=A
    @LCL
    M=M+D
    @SP
    M=M-1
    A=M
    D=M
    @LCL
    A=M
    M=D
    @0
    D=A
    @LCL
    M=M-D
    // push argument 0
    @0
    D=A
    @ARG
    A=D+M
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    // push constant 1
    @1
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
    // sub
    @SP
    M=M-1
    A=M
    D=M
    @SP
    M=M-1
    A=M
    M=M-D
    @SP
    M=M+1
    // pop argument 0      // counter--
    @0
    D=A
    @ARG
    M=M+D
    @SP
    M=M-1
    A=M
    D=M
    @ARG
    A=M
    M=D
    @0
    D=A
    @ARG
    M=M-D
    // push argument 0
    @0
    D=A
    @ARG
    A=D+M
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    // TODO if-goto LOOP_START  // If counter != 0, goto LOOP_START
    @SP
    M=M-1
    A=M
    D=M
    @LOOP_START
    D;JNE
    // push local 0
    @0
    D=A
    @LCL
    A=D+M
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
